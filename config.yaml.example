global:
    # you can overwrite the hostname here
    hostname: alias.host.name

collector:
    cpu:
        input:
            type: file
            path: "/proc/stat"
            frequency: 10
        parser:
            type: class
            name: reporting.plugins.linux.CPUParser
        output: buffer
        metadata:
            schema: linux.cpu
            version: 1
    memory:
        input:
            type: file
            path: "/proc/meminfo"
            frequency: 10
        parser:
            type: class
            name: reporting.plugins.linux.MemParser
        output: buffer
        metadata:
            schema: linux.memory
            version: 1
    netdev:
        input:
            type: file
            path: "/proc/net/dev"
            frequency: 10
        parser:
            type: class
            name: reporting.plugins.linux.NetDevParser
            arguments:
                include_devices:
                    - eth*
                    - bond0
        output: buffer
        metadata:
            schema: linux.netdev
            version: 1
    load:
        input:
            type: file
            path: "/proc/loadavg"
            frequency: 10
        parser:
            type: split
            delimiter: |
                       \s
            transform: |
                       {{"1m":{0}, "5m":{1}, "15m":{2}}}
        output: buffer
        metadata:
            schema: linux.load
            version: 1
    df:
        input:
            type: command
            source: "/bin/df -Pk"
            frequency: 60
        parser:
            type: class
            name: reporting.plugins.linux.DfParser
            arguments:
                exclude_devices:
                    - tmpfs
                    - udev
                    - none
        output: buffer
        metadata:
            schema: linux.df
            version: 1
    xfs_quota_report:
        input:
            type: command
            source: "/usr/sbin/xfs_quota -x -c 'report -u'"
            frequency: 600
        parser:
            type: class
            name: reporting.plugins.xfs.QuotaReportParser
            arguments:
                exclude_users:
                    - root
                    - bin
                    - daemon
                    - games
                    - gdm
                    - rpcuser
                    - nagios
                    - apache
                    - nobody
                    - nfsnobody
        output: buffer
        metadata:
            schema: xfs.quota.report
            version: 1
    xfs_stat:
        input:
            type: file
            path: "/proc/fs/xfs/stat"
            frequency: 10
        parser:
            type: class
            name: reporting.plugins.xfs.StatParser
        output: buffer
        metadata:
            schema: xfs.stat
            version: 1
    pbs_server_log:
        input:
            type: tailer
            path: /var/spool/torque/server_logs/*
            collect_history_data: False
            frequency: 1
        parser:
            type: class
            name: reporting.plugins.pbs.ServerLogParser
        output: kafka-http
        metadata:
            schema: pbs.server.log
            version: 1
    pbs_accounting_log:
        input:
            type: tailer
            path: /var/spool/torque/server_priv/accounting/*
            collect_history_data: True
            frequency: 1
        parser:
            type: class
            name: reporting.plugins.pbs.AccountingLogParser
            arguments:
                ignore_regex:
                    - .* account=[^ ]+ .*
        output: kafka-http
        metadata:
            schema: pbs.accounting.log
            version: 1
    pbs_mom_log:
        input:
            type: tailer
            path: /var/spool/torque/mom_logs/*
            collect_history_data: False
            frequency: 1
        parser:
            type: class
            name: reporting.plugins.pbs.MomLogParser
        output: kafka-http
        metadata:
            schema: pbs.server.log
            version: 1
    mountstats:
        input:
            type: file
            path: "/proc/self/mountstats"
            frequency: 10
        parser:
            type: class
            name: reporting.plugins.nfs.MountstatsParser
            arguments:
                fstype:
                    - nfs
                    - nfs4
        output: buffer
        metadata:
            schema: nfs.mountstats
            version: 1
    hcp_chargeback_one_tenant:
        input:
            type: http
            url: https://tenant1.hcp1.s3.ersa.edu.au:9090/mapi/tenants/tenant1/chargebackReport
            headers:
                Authorization: "HCP user:token"
                Accept: "application/json"
            frequency: 10
        parser:
            type: json
            arguments:
                pattern: "chargebackData"
                list_name: "hcp-chargeback"
        output: buffer
        metadata:
            schema: hcp.chargeback
            version: 1
    hcp.chargeback_all_tenants:
        input:
            type: class
            name: reporting.plugins.hcp.ChargeBackInput
            arguments:
                host: dev.hcp1.s3.ersa.edu.au:9090
                username: username
                password: password
                query_period: 1
            frequency: 60
        output: buffer
        metadata:
            schema: hcp.chargeback
            version: 1
    zfs_kstat:
        input:
            type: class
            name: reporting.plugins.zfs.KstatInput
            frequency: 5
        output: buffer
        metadata:
            schema: zfs.kstat
            version: 1
    zfs_iostat:
        input:
            type: command
            source: "/sbin/zpool iostat"
            frequency: 5
        parser:
            type: class
            name: reporting.plugins.zfs.IostatParser
        output: buffer
        metadata:
            schema: zfs.iostat
            version: 1
    zfs_list:
        input:
            type: command
            source: "/sbin/zfs list -o name,avail,used,ratio"
            frequency: 5
        parser:
            type: class
            name: reporting.plugins.zfs.ListParser
        output: buffer
        metadata:
            schema: zfs.list
            version: 1
    libvirt:
        input:
            type: class
            name: reporting.plugins.kvm.LibvirtInput
            frequency: 5
        output: buffer
        metadata:
            schema: libvirt
            version: 1
    mysql_stat:
        input:
            type: command
            source: "/usr/bin/mysqladmin stat"
            frequency: 5
        parser:
            type: split
            delimiter: |
                       \s+
            transform: |
                       {{"Uptime":{1},"Threads":{3},"Questions":{5},"Slow queries":{8},"Opens":{10},"Flush tables":{13},"Open tables":{16},"Queries per second avg":{21}}}
        output: buffer
        metadata:
            schema: mysql.stat
            version: 1
    mysql_proc:
        input:
            type: command
            source: "/usr/bin/mysqladmin proc"
            frequency: 10
        parser:
            type: class
            name: reporting.plugins.mysql.ProcParser
        output: buffer
        metadata:
            schema: mysql.proc
            version: 1
    mysql_status:
        input:
            type: command
            source: "/usr/bin/mysqladmin extended"
            frequency: 10
        parser:
            type: class
            name: reporting.plugins.mysql.StatusParser
        output: buffer
        metadata:
            schema: mysql.proc
            version: 1
    rabbitmq_overview:
        input:
            type: http
            url: http://localhost:15672/api/overview
            auth:
                username: reporting
                password: password
            headers:
                Accept: "application/json"
            frequency: 10
        parser:
            type: json
            arguments:
                pattern: ""
        output: buffer
        metadata:
            schema: rabbitmq.overview
            version: 1
    rabbitmq_nodes:
        input:
            type: http
            url: http://localhost:15672/api/nodes
            auth:
                username: reporting
                password: password
            headers:
                Accept: "application/json"
            frequency: 10
        parser:
            type: json
            arguments:
                pattern: ""
        output: buffer
        metadata:
            schema: rabbitmq.overview
            version: 1
    hnas_filesystems:
        input:
            type: class
            name: reporting.plugins.hnas.FileSystemsInput
            arguments:
                host: hostname
                username: reporting
                password: password
            frequency: 600
        output: buffer
        metadata:
            schema: hnas.filesystems
            version: 1
    nova_list:
        input:
            type: class
            name: reporting.plugins.openstack.NovaListInput
            arguments:
                project: tenant-name
                username: username
                password: token
                auth_url: https://keystone.rc.nectar.org.au:5000/v2.0/
            frequency: 600
        output: buffer
        metadata:
            schema: nova.list
            version: 1
    keystone_list:
        input:
            type: class
            name: reporting.plugins.openstack.KeystoneListInput
            arguments:
                project: tenant-name
                username: username
                password: token
                auth_url: https://keystone.rc.nectar.org.au:5000/v2.0/
            frequency: 600
        output: buffer
        metadata:
            schema: keystone.list
            version: 1
    cinder_list:
        input:
            type: class
            name: reporting.plugins.openstack.CinderListInput
            arguments:
                project: tenant-name
                username: username
                password: token
                auth_url: https://keystone.rc.nectar.org.au:5000/v2.0/
            frequency: 600
        output: buffer
        metadata:
            schema: cinder.list
            version: 1    
    swift_usage:
        input:
            type: class
            name: reporting.plugins.openstack.SwiftUsageInput
            arguments:
                project: tenant-name
                username: username
                password: token
                auth_url: https://keystone.rc.nectar.org.au:5000/v2.0/
            frequency: 600
        output: buffer
        metadata:
            schema: swift.usage
            version: 1
    filesystem_usage_tmp:
        input:
            type: class
            name: reporting.plugins.linux.FileSystemUsage
            arguments:
                path: /tmp
        output: buffer
        metadata:
            schema: filesystem.usage
            version: 1

tailer:
    db_path: /mnt/producer/tailer.db
    max_line_number: 300

output:
    # Reporting API server (kafka's http front end)
    kafka-http:
        url: https://collector.dyn.ersa.edu.au:3772/v1/topic/emu
        username: test
        token: test
        timeout: 10
    # local cache that holds data temporarily before pushing to server
    buffer:
        directory: /mnt/producer/cache
        size: 4096000
    # file output for testing (everything message will be saved into this file)
    file:
        path: /mnt/producer/out

# a pusher to push data in local cache
pusher:
    # Local staging directory
    directory: /tmp/producer-cache
    output: kafka-http
    back_off_indicator: /var/run/reporting-producer/back-off
    stats_on: True

logging:
    log_level: 3
    log_location: /tmp/producer.log
    log_format: "%(asctime)s - %(levelname)s - %(processName)s - %(threadName)s - %(message)s"
    log_max_size: 2097152
